<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:bv="clr-namespace:RoSatGCS.Behaviors"
                    xmlns:cvt="clr-namespace:RoSatGCS.Utils.Converter"
                    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
                    xmlns:loc="clr-namespace:RoSatGCS.Utils.Localization"
                    xmlns:local="clr-namespace:RoSatGCS.Views"
                    xmlns:vm="clr-namespace:RoSatGCS.ViewModels"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
    <Style x:Key="Splitter" TargetType="Rectangle">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="1"/>
        <Setter Property="Margin" Value="3,6,3,6"/>
        <Setter Property="Stroke" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}"/>
    </Style>

    <DataTemplate x:Key="PaneTemplateCommandSet" DataType="{x:Type vm:PaneCommandSetViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="38"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Margin="10,0,10,0" Grid.Row="0" BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}" BorderThickness="0,0,0,0.5">
                <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                    <TextBlock Text="{loc:Localization sGroup}" VerticalAlignment="Center" Margin="0,0,10,2" FontSize="11"/>
                    <TextBox Height="24" Width="100" VerticalAlignment="Center" Text="{Binding GroupAddName, UpdateSourceTrigger=PropertyChanged}"
                     adonisExtensions:WatermarkExtension.Watermark="{loc:Localization sName}">
                        <TextBox.InputBindings>
                            <KeyBinding Command="{Binding GroupAdd}" Key="Enter"/>
                        </TextBox.InputBindings>
                    </TextBox>
                    <Button Style="{DynamicResource PaneButton}" ToolTip="{loc:Localization sAdd}" Command="{Binding GroupAdd}">
                        <Rectangle Style="{DynamicResource Icon}" Height="10" Width="12">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconAddGroup}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Rectangle Style="{StaticResource Splitter}"/>
                    <Button Style="{DynamicResource PaneButton}" ToolTip="{loc:Localization sDeleteAll}" Command="{Binding DeleteAll}">
                        <Rectangle Style="{DynamicResource Icon}" Height="10" Width="10">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconTrash}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                </StackPanel>
            </Border>

            <ScrollViewer Grid.Row="1">
                <ListBox x:Name="CommandSetListBox" ItemsSource="{Binding DataContext.SatelliteCommandGroupView, RelativeSource={RelativeSource AncestorType=Page}}"
                     ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedItem="{x:Null}"
                     ScrollViewer.VerticalScrollBarVisibility="Disabled"  bv:PassMouseWheelBehavior.EnableMouseWheelPass="True">
                    <b:Interaction.Behaviors>
                        <bv:CommandListRearrangeBehavior Parent="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Page}}"/>
                    </b:Interaction.Behaviors>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Padding="5" BorderThickness="0.5" BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="24"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Expander Grid.RowSpan="2" Padding="0" BorderThickness="0"  HorizontalAlignment="Stretch">
                                        <Expander.Header>
                                            <WrapPanel>
                                                <TextBox Margin="0,-1,0,0" Height="18" VerticalAlignment="Top" Text="{Binding Rename, Mode=TwoWay}"
                                                 bv:TextBoxFocusBehavior.IsFocused="{Binding IsRename}"
                                                 Visibility="{Binding IsRename, Converter={StaticResource BoolToVisibility}}">
                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="LostFocus">
                                                            <b:InvokeCommandAction Command="{Binding ApplyRename}"/>
                                                        </b:EventTrigger>
                                                        <b:EventTrigger EventName="PreviewKeyDown">
                                                            <b:InvokeCommandAction Command="{Binding RenameKeyDown}"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>
                                                    <TextBox.Style>
                                                        <Style TargetType="TextBox"/>
                                                    </TextBox.Style>
                                                </TextBox>
                                                <TextBlock Text="{Binding Name}" Visibility="{Binding IsNotRename, Converter={StaticResource BoolToVisibility}}"/>

                                                <Button Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="3,1,0,0" Style="{DynamicResource TipButton}" Command="{Binding RenameCommandGroup}">
                                                    <Rectangle Style="{DynamicResource Icon}" ToolTip="{loc:Localization sRename}" Width="7" Height="7">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconEdit}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>
                                            </WrapPanel>
                                        </Expander.Header>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="16"/>
                                            </Grid.RowDefinitions>
                                            <ListBox x:Name="CommandGroupList" ItemsSource="{Binding Commands}" Padding="0,3,0,0"
                                              ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                              ScrollViewer.VerticalScrollBarVisibility="Disabled"  bv:PassMouseWheelBehavior.EnableMouseWheelPass="True"
                                              SelectionMode="Extended">
                                                <b:Interaction.Behaviors>
                                                    <bv:CommandListDoubleClickBehavior Parent="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Page}}"/>
                                                </b:Interaction.Behaviors>
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="LostFocus">
                                                        <b:InvokeCommandAction Command="{Binding LostListFocus}" CommandParameter="{Binding ElementName=CommandGroupList}"/>
                                                    </b:EventTrigger>
                                                    <b:EventTrigger EventName="SelectionChanged">
                                                        <b:InvokeCommandAction Command="{Binding UpdateSelectedItems}" CommandParameter="{Binding Path=SelectedItems, ElementName=CommandGroupList}"/>
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                                <ListBox.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="{loc:Localization sExecuteOnce}" Command="{Binding ExecuteOnce}"/>
                                                        <MenuItem Header="{loc:Localization sPreview}" Command="{Binding OpenPreview}">
                                                            <MenuItem.CommandParameter>
                                                                <sys:Boolean>false</sys:Boolean>
                                                            </MenuItem.CommandParameter>
                                                        </MenuItem>
                                                        <Separator/>
                                                        <MenuItem Header="{loc:Localization sDelete}" Command="{Binding DeleteItem}"/>
                                                        <Separator Visibility="{Binding IsSingleSelection, Converter={StaticResource cvtBoolVisibility}}"/>
                                                        <MenuItem Header="{loc:Localization sProperties}" Visibility="{Binding IsSingleSelection, Converter={StaticResource cvtBoolVisibility}}"
                                                          Command="{Binding OpenProperty}"/>
                                                    </ContextMenu>
                                                </ListBox.ContextMenu>
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Height="20">
                                                            <Grid>
                                                                <Grid.Style>
                                                                    <Style TargetType="Grid">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsExecuting}" Value="True">
                                                                                <Setter Property="Effect">
                                                                                    <Setter.Value>
                                                                                        <BlurEffect Radius="1"/>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Grid.Style>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="30"/>
                                                                    <ColumnDefinition Width="10"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="10"/>
                                                                    <ColumnDefinition Width="3*"/>
                                                                    <ColumnDefinition Width="20"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0" Text="{Binding GroupIndex}" Margin="5,0,0,0"/>
                                                                <Rectangle Grid.Column="1" Margin="3,4,5,4" Style="{StaticResource Splitter}" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
                                                                <TextBlock Grid.Column="2" Text="{Binding File}" TextTrimming="CharacterEllipsis"
                                                                   Width="{Binding ElementName=cmd_helperField0, Path=ActualWidth}"/>
                                                                <Rectangle Grid.Column="3" Margin="3,4,5,4" Style="{StaticResource Splitter}" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
                                                                <TextBlock Grid.Column="4" Text="{Binding Name}" TextTrimming="CharacterEllipsis"
                                                                Width="{Binding ElementName=cmd_helperField1, Path=ActualWidth}"/>
                                                                <Button Grid.Column="5" Style="{DynamicResource ToolButton}" Background="Transparent" Command="{Binding Execute}">
                                                                    <Grid>
                                                                        <Grid.Style>
                                                                            <Style TargetType="Grid">
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding IsValid}" Value="False">
                                                                                        <Setter Property="ToolTip" Value="{loc:Localization sInvalid}"/>
                                                                                    </DataTrigger>
                                                                                    <DataTrigger Binding="{Binding IsValid}" Value="True">
                                                                                        <Setter Property="ToolTip" Value="{loc:Localization sRun}"/>
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Grid.Style>
                                                                        <Rectangle Width="8" Height="10">
                                                                            <Rectangle.Style>
                                                                                <Style TargetType="Rectangle">
                                                                                    <Style.Triggers>
                                                                                        <DataTrigger Binding="{Binding IsValid}" Value="False">
                                                                                            <Setter Property="Fill" Value="LightCoral"/>
                                                                                        </DataTrigger>
                                                                                        <DataTrigger Binding="{Binding IsValid}" Value="True">
                                                                                            <Setter Property="Fill" Value="Transparent"/>
                                                                                        </DataTrigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </Rectangle.Style>
                                                                            <Rectangle.OpacityMask>
                                                                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconRunFill}"/>
                                                                            </Rectangle.OpacityMask>
                                                                        </Rectangle>
                                                                        <Rectangle Style="{DynamicResource Icon}" Width="8" Height="10">
                                                                            <Rectangle.OpacityMask>
                                                                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconRun}"/>
                                                                            </Rectangle.OpacityMask>
                                                                        </Rectangle>
                                                                    </Grid>
                                                                </Button>
                                                            </Grid>
                                                            <Border Grid.ColumnSpan="5" Visibility="{Binding IsExecuting, Converter={StaticResource BoolToVisibility}}" Background="#A0FFFFFF">
                                                                <ContentControl ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.LoadingCircle}}"
                                                            Foreground="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Width="12" Height="12"  Focusable="False"/>
                                                            </Border>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                                <ListBox.ItemContainerStyle>
                                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                        <Setter Property="Padding" Value="0,0,0,0"/>
                                                        <Setter Property="ToolTip">
                                                            <Setter.Value>
                                                                <UniformGrid Columns="1">
                                                                    <TextBlock Text="{Binding File}"/>
                                                                    <TextBlock Text="{Binding Name}"/>
                                                                </UniformGrid>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ListBox.ItemContainerStyle>
                                            </ListBox>
                                            <WrapPanel Grid.Row="1" Margin="0,2,5,0" HorizontalAlignment="Right" VerticalAlignment="Top">
                                                <TextBlock Text="Updated: " FontSize="10"/>
                                                <TextBlock Text="{Binding ElapsedTime}" FontSize="10"/>
                                            </WrapPanel>
                                        </Grid>
                                    </Expander>

                                    <Button HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,0,0" Style="{DynamicResource ToolButton}" 
                                    Background="Transparent" Command="{Binding ExecuteAll}" ToolTip="{loc:Localization sRunAll}">
                                        <Rectangle Style="{DynamicResource Icon}" Width="10" Height="10">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconRunAll}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>

                                    <Button HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,22,0" Style="{DynamicResource ToolButton}"
                                Background="Transparent">
                                        <Rectangle Style="{DynamicResource Icon}" ToolTip="{loc:Localization sProperties}" Width="10" Height="10">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconSetting}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>

                                    <WrapPanel Grid.Row="0" Margin="0,4,55,0" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <TextBlock Text="Period: " FontSize="10"/>
                                        <TextBlock Text="10 sec" FontSize="10"/>
                                    </WrapPanel>

                                    <Grid Visibility="Visible">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30"/>
                                            <ColumnDefinition Width="10"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="10"/>
                                            <ColumnDefinition Width="3*"/>
                                            <ColumnDefinition Width="20"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="2" x:Name="cmd_helperField0"/>
                                        <Grid Grid.Column="4" x:Name="cmd_helperField1"/>
                                    </Grid>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="{loc:Localization sExecuteAll}" Command="{Binding ExecuteAll}"/>
                                        <Separator/>
                                        <MenuItem Header="{loc:Localization sRename}" Command="{Binding RenameCommandGroup}"/>
                                        <MenuItem Header="{loc:Localization sDelete}" Command="{Binding DeleteCommandGroup}"/>
                                        <Separator/>
                                        <MenuItem Header="{loc:Localization sProperties}"/>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </ScrollViewer>
        </Grid>
    </DataTemplate>
</ResourceDictionary>