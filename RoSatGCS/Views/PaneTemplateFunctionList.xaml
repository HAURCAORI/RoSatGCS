<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:bv="clr-namespace:RoSatGCS.Behaviors"
                    xmlns:cvt="clr-namespace:RoSatGCS.Utils.Converter"
                    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
                    xmlns:loc="clr-namespace:RoSatGCS.Utils.Localization"
                    xmlns:local="clr-namespace:RoSatGCS.Views"
                    xmlns:vm="clr-namespace:RoSatGCS.ViewModels"
                    xmlns:ap="clr-namespace:RoSatGCS.Utils.AttachedProperties">

    <Style x:Key="Splitter" TargetType="Rectangle">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="1"/>
        <Setter Property="Margin" Value="3,6,3,6"/>
        <Setter Property="Stroke" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}"/>
    </Style>
    
    <DataTemplate x:Key="PaneTemplateFunctionList" DataType="{x:Type vm:PaneFunctionListViewModel}">
        <Grid Margin="10,5,10,5">
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <Button Style="{DynamicResource PaneButton}" ToolTip="{loc:Localization sCheckAll}" Command="{Binding CheckAll}">
                        <Rectangle Style="{DynamicResource Icon}" Height="11" Width="11">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconCheckAll}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Button Style="{DynamicResource PaneButton}" ToolTip="{loc:Localization sUncheckAll}" Command="{Binding UncheckAll}">
                        <Rectangle Style="{DynamicResource Icon}" Height="11" Width="11">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconUncheckAll}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>
                    <Rectangle Style="{StaticResource Splitter}"/>
                    <TextBlock Text="{loc:Localization sCommand}" VerticalAlignment="Center" Margin="3,0,3,0" FontSize="11"/>
                    <ComboBox Width="100" Height="24" Margin="5,0,2,0" DisplayMemberPath="Name"
                          ItemsSource="{Binding DataContext.SatelliteCommandGroupView, RelativeSource={RelativeSource AncestorType=Page}}"
                          SelectedItem="{Binding SelectedCommandGroup}">
                        <ComboBox.Style>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.SatelliteCommandGroupView.Count, RelativeSource={RelativeSource AncestorType=Page}}" Value="0">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                    <Button Style="{DynamicResource PaneButton}" ToolTip="{loc:Localization sAdd}" Command="{Binding AddToCommand}">
                        <Rectangle Style="{DynamicResource Icon}" Height="10" Width="13">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconStackAdd}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>

                    <Rectangle Style="{StaticResource Splitter}"/>

                </StackPanel>

                <TextBox MinWidth="30" Margin="0,0,24,0" Grid.Column="1" Height="24" adonisExtensions:WatermarkExtension.Watermark="{loc:Localization sSearch}"
                     Text="{Binding SearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Grid.Column="1" HorizontalAlignment="Right" Style="{DynamicResource PaneButton}" ToolTip="{loc:Localization sClear}" Command="{Binding SearchClear}">
                    <Rectangle Style="{DynamicResource Icon}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconClear}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
            </Grid>

            <ListView Grid.Row="1" ItemsSource="{Binding DataContext.SatelliteMethodView, RelativeSource={RelativeSource AncestorType=Page}}"
                  x:Name="FunctionList" ap:GridViewSort.AutoSort="True" SelectionMode="Extended">
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{loc:Localization sAdd}" Command="{Binding AddToCommandSelected}"/>
                        <MenuItem Header="{loc:Localization sAddOnboardScheduler}" Command="{Binding AddToOnboardScheduler}"/>
                        <Separator/>
                        <MenuItem Header="{loc:Localization sSelect}" Command="{Binding Select}"/>
                        <MenuItem Header="{loc:Localization sDeselect}" Command="{Binding Deselect}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
                <b:Interaction.Behaviors>
                    <bv:CommandListDoubleClickBehavior Parent="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Page}}"/>
                </b:Interaction.Behaviors>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="LostFocus">
                        <b:InvokeCommandAction Command="{Binding LostListFocus}" CommandParameter="{Binding ElementName=FunctionList}"/>
                    </b:EventTrigger>
                    <b:EventTrigger EventName="SelectionChanged">
                        <b:InvokeCommandAction Command="{Binding UpdateSelectedItems}" CommandParameter="{Binding Path=SelectedItems, ElementName=FunctionList}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="{Binding ElementName=flp_helperField0, Path=ActualWidth}">
                            <GridViewColumnHeader IsEnabled="False"/>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{loc:Localization sFile}" Width="{Binding ElementName=flp_helperField1, Path=ActualWidth}" ap:GridViewSort.PropertyName="File">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding File}" ToolTip="{Binding File}" TextTrimming="CharacterEllipsis"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="ID" Width="40" x:Name="flp_col2" ap:GridViewSort.PropertyName="Id">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Id}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{loc:Localization sName}" Width="{Binding ElementName=flp_helperField2, Path=ActualWidth}" ap:GridViewSort.PropertyName="Name">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" ToolTip="{Binding Name}" TextTrimming="CharacterEllipsis"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{loc:Localization sDescription}" Width="{Binding ElementName=flp_helperField3, Path=ActualWidth}" ap:GridViewSort.PropertyName="Description">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Description}" ToolTip="{Binding Description}" TextTrimming="CharacterEllipsis">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="True">
                                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                                        <Setter Property="MaxHeight" Value="100"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>

            <Grid Visibility="Hidden">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <!--Width is bound to width of the first GridViewColumn -->
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="{Binding ElementName=flp_col2, Path=ActualWidth}"/>
                    <!--Width is set to "Fill"-->
                    <ColumnDefinition Width="5*"/>
                    <!--Correction Width-->
                    <ColumnDefinition Width="8*"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid-->
                <Grid Grid.Column="0" x:Name="flp_helperField0"/>
                <Grid Grid.Column="1" x:Name="flp_helperField1"/>
                <Grid Grid.Column="3" x:Name="flp_helperField2"/>
                <Grid Grid.Column="4" x:Name="flp_helperField3"/>
            </Grid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>