<adonisControls:AdonisWindow x:Class="RoSatGCS.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RoSatGCS"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
        xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI" 
        xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
        xmlns:loc="clr-namespace:RoSatGCS.Utils.Localization"
        xmlns:ctr="clr-namespace:RoSatGCS.Controls"
        xmlns:behaviors="clr-namespace:RoSatGCS.Utils.Navigation"
        xmlns:cvt="clr-namespace:RoSatGCS.Utils.Converter"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="1000"
        ShrinkTitleBarWhenMaximized="False" TitleVisibility="Collapsed" TitleBarBackground="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}"
                             FontFamily="{StaticResource KPDotum}">
    <adonisControls:AdonisWindow.Resources>
        <cvt:EnumConverter x:Key="EnumConverter"/>
        <cvt:ServiceStatusConverter x:Key="ServiceStatusConverter"/>
        <cvt:FrequencyConverter x:Key="FrequencyConverter"/>
    </adonisControls:AdonisWindow.Resources>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Closing">
            <b:InvokeCommandAction Command="{Binding ClosingCommand}"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="Closed">
            <b:InvokeCommandAction Command="{Binding ClosedCommand}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <!-- Title Bar Definition -->
    <adonisControls:AdonisWindow.TitleBarContent>
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Left">
            <Menu DockPanel.Dock="Top" Margin="10,0,0,0">
                <MenuItem Header="{loc:Localization MenuFile}" Style="{DynamicResource MainMenuStyle}">
                    <MenuItem Header="Item" Style="{DynamicResource SubMenuStyle}"/>
                </MenuItem>
                <MenuItem Header="{loc:Localization MenuView}" Style="{DynamicResource MainMenuStyle}">
                    <MenuItem Header="Item" Style="{DynamicResource SubMenuStyle}" IsEnabled="False"/>
                </MenuItem>
                <MenuItem Header="{loc:Localization MenuTool}" Style="{DynamicResource MainMenuStyle}">
                    <MenuItem Header="Item" Style="{DynamicResource SubMenuStyle}"/>
                </MenuItem>
                <MenuItem Header="{loc:Localization MenuWindow}" Style="{DynamicResource MainMenuStyle}">
                    <MenuItem Header="Item" Style="{DynamicResource SubMenuStyle}"/>
                </MenuItem>
                <MenuItem Header="{loc:Localization MenuHelp}" Style="{DynamicResource MainMenuStyle}">
                    <MenuItem Header="Item" Style="{DynamicResource SubMenuStyle}"/>
                </MenuItem>
            </Menu>
        </StackPanel>
    </adonisControls:AdonisWindow.TitleBarContent>

    <!-- Main Grid -->
    <Grid Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="34"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <!-- ToolBar -->
        <StackPanel x:Name="ToolBarRoot" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Vertical" Margin="0" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}">
            <StackPanel.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="Label">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <Style x:Key="Splitter" TargetType="Rectangle">
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                    <Setter Property="Width" Value="1"/>
                    <Setter Property="Margin" Value="3,6,3,6"/>
                    <Setter Property="Stroke" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}"/>
                </Style>
            </StackPanel.Resources>

            <StackPanel x:Name="ToolBar" Height="30" Orientation="Horizontal" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}">
                <Label Content="{loc:Localization TopBarTime}" FontSize="12" Margin="8,0,0,0"/>
                <TextBlock Text="{Binding CurrentTime, StringFormat=HH:mm:ss}" FontSize="18" Width="75" Margin="2,0,2,2"/>
                <Rectangle Style="{DynamicResource Splitter}"/>

                <Label Content="{loc:Localization TopBarPreset}"  Margin="5,0,2,0"/>
                <ComboBox Width="100" Height="24" Margin="5,0,2,0">
                    <ComboBoxItem FontSize="10" Height="20"/>
                </ComboBox>
                <Button Style="{DynamicResource ToolButton}" ToolTip="{loc:Localization sApply}">
                    <Rectangle Style="{DynamicResource Icon}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconSubmit}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                <Button Style="{DynamicResource ToolButton}" ToolTip="{loc:Localization sSetting}">
                    <Rectangle Style="{DynamicResource Icon}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconSetting}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>


                <Rectangle Style="{DynamicResource Splitter}"/>
                <Label Content="{loc:Localization TopBarSchedule}"  Margin="5,0,0,0"/>
                <TextBlock Text="12:00:00" FontSize="18" Width="75" Margin="2,0,8,2"/>
                <Border BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer3BorderBrush}}" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}" BorderThickness="0.5" Height="26" CornerRadius="2" Margin="0,0,2,0">
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Style="{DynamicResource Icon}" Margin="10,0,5,0" >
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconDownLink}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Text="{Binding SettingsModel.DownlinkFreq, Converter={StaticResource FrequencyConverter}}" FontSize="12" Margin="2,0,10,0"/>
                    </StackPanel>
                </Border>
                <Border BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer3BorderBrush}}" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}" BorderThickness="0.5" Height="26" CornerRadius="2" Margin="0,0,5,0">
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Style="{DynamicResource Icon}" Margin="10,0,5,0">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconUpLink}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock  Text="{Binding SettingsModel.UplinkFreq, Converter={StaticResource FrequencyConverter}}" FontSize="12" Margin="2,0,10,0"/>
                    </StackPanel>
                </Border>
                <Rectangle Style="{DynamicResource Splitter}"/>


                <Label Content="{loc:Localization TopBarSerialPort}" FontSize="12" Margin="4,0,0,0"/>
                <ComboBox Width="100" Height="24" Margin="5,0,2,0">
                    <ComboBoxItem FontSize="10" Height="20"/>
                </ComboBox>
                <Button Style="{DynamicResource ToolButton}" ToolTip="{loc:Localization sRefresh}">
                    <Rectangle Style="{DynamicResource Icon}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconRefresh}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                <Button Style="{DynamicResource ToolButton}" ToolTip="{loc:Localization sConnect}">
                    <Rectangle Style="{DynamicResource Icon}" Width="14" Height="14">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{StaticResource IconConnect}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>

                <Button Style="{DynamicResource ToolButton}" ToolTip="{loc:Localization sSetting}">
                    <Rectangle Style="{DynamicResource Icon}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconSetting}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                <Rectangle Style="{DynamicResource Splitter}"/>
                <Label Content="{loc:Localization TopBarStatus}"  Margin="5,0,4,0"/>
                <Border BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer3BorderBrush}}" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}" BorderThickness="0.5" Height="26" CornerRadius="2" Margin="0,0,2,0">
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Style="{DynamicResource Icon}" Margin="10,3,2,0">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconSerial}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <Label Content="{loc:Localization sSerial}"/>
                        <ctr:StatusIndicator x:Name="SerialStatus" Margin="2,2,8,0"/>
                    </StackPanel>
                </Border>
                <Border BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer3BorderBrush}}" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}" BorderThickness="0.5" Height="26" CornerRadius="2" Margin="0,0,2,0">
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Style="{DynamicResource Icon}" Margin="10,3,2,0">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconDatabase}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <Label Content="{loc:Localization sDatabase}"/>
                        <ctr:StatusIndicator x:Name="DatabaseStatus" Margin="2,2,8,0"/>
                    </StackPanel>
                </Border>
                <Border BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer3BorderBrush}}" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}"
                        BorderThickness="0.5" Height="26" CornerRadius="2" Margin="0,0,2,0" ToolTip="{Binding ServiceManager.State, Converter={StaticResource EnumConverter}}">
                    <Border.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{loc:Localization sStart}" Command="{Binding StartService}"/>
                            <MenuItem Header="{loc:Localization sStop}" Command="{Binding StopService}"/>
                            <MenuItem Header="{loc:Localization sRestart}" Command="{Binding RestartService}"/>
                        </ContextMenu>
                    </Border.ContextMenu>
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Style="{DynamicResource Icon}" Margin="10,3,2,0">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconProcessor}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <Label Content="{loc:Localization sProcessor}"/>
                        <ctr:StatusIndicator x:Name="ProcessorStatus" Margin="2,2,8,0" Status="{Binding ServiceManager.State, Converter={StaticResource ServiceStatusConverter}}"/>
                    </StackPanel>
                </Border>
            </StackPanel>
        </StackPanel>

        <!-- Sidebar Definition-->
        <Border Grid.Row="1" Grid.Column="0" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" BorderThickness="0.5" BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}">
            <StackPanel x:Name="Sidebar" Orientation="Vertical" Cursor="">
                <!-- Dashboard -->
                <!--
                <Button Style="{DynamicResource SidebarButton}" ToolTip="{loc:Localization sDashboard}" Command="{Binding NavigateCommand}" CommandParameter="dashboard">
                    <Rectangle Style="{DynamicResource SidebarIcon}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconDashboard}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                -->
                <!-- Scheduler -->
                <!--
                <Button Style="{DynamicResource SidebarButton}" ToolTip="{loc:Localization sScheduler}" Command="{Binding NavigateCommand}" CommandParameter="scheduler">
                    <Rectangle Style="{DynamicResource SidebarIcon}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconScheduler}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                -->
                <!-- Ground Track -->
                <!--
                <Button Style="{DynamicResource SidebarButton}" ToolTip="{loc:Localization sGroundTrack}" Command="{Binding NavigateCommand}" CommandParameter="groundtrack">
                    <Rectangle Style="{DynamicResource SidebarIcon}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconGroundControl}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                -->
                <!-- Command -->
                <Button Style="{DynamicResource SidebarButton}" ToolTip="{loc:Localization sCommand}" Command="{Binding NavigateCommand}" CommandParameter="command">
                    <Rectangle Style="{DynamicResource SidebarIcon}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconCommand}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                <!-- Files -->
                <Button Style="{DynamicResource SidebarButton}" ToolTip="{loc:Localization sFileShare}" Command="{Binding NavigateCommand}" CommandParameter="fileshare">
                    <Rectangle Style="{DynamicResource SidebarIcon}" Width="20" Height="20">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconFileShare}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>

                <!-- Archive -->
                <!--
                <Button Style="{DynamicResource SidebarButton}" ToolTip="{loc:Localization sArchive}" Command="{Binding NavigateCommand}" CommandParameter="archive">
                    <Rectangle Style="{DynamicResource SidebarIcon}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconArchive}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                -->
            </StackPanel>
        </Border>
        
        <!-- StatusBar -->
        <StackPanel x:Name="StatusBar" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal"  Background="#FF861B2D">
            <Button Style="{DynamicResource ToolButton}" ToolTip="{loc:Localization sSetting}" Background="Transparent" Margin="5,0,0,0" adonisExtensions:CursorSpotlightExtension.BackgroundBrush="#40FFFFFF"
                    Command="{Binding OpenWindowCommand}" CommandParameter="settings">
                <Rectangle Style="{DynamicResource Icon}" Fill="WhiteSmoke">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource IconSetting}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <TextBlock Text="{loc:Localization sSetting}" Foreground="White" Margin="5,3,3,3"/>

        </StackPanel>
        
        <Frame Grid.Column="1" Grid.Row="1" NavigationUIVisibility="Hidden">
            <b:Interaction.Behaviors>
                <behaviors:FrameBehavior NavigationSource="{Binding NavigationSource, Mode=TwoWay}" />
            </b:Interaction.Behaviors>
        </Frame>
        <Button Grid.Column="1" Visibility="Hidden" Content="Button" HorizontalAlignment="Left" Margin="268,24,0,0" Grid.Row="1" VerticalAlignment="Top" Click="Button_Click"/>
        <Button Grid.Column="1" Visibility="Hidden" Content="Button" HorizontalAlignment="Center" Margin="0,24,0,0" Grid.Row="1" VerticalAlignment="Top" Click="Button_Click_1"/>
        <ctr:GroundTrackMap Visibility="Hidden" Grid.Column="1" Grid.Row="1" Width="800" Height="400" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
    </Grid>
</adonisControls:AdonisWindow>
