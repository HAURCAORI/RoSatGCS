<Page x:Class="RoSatGCS.Views.PageCommand"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
      xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
      xmlns:local="clr-namespace:RoSatGCS.Views"
      xmlns:loc="clr-namespace:RoSatGCS.Utils.Localization"
      xmlns:bv="clr-namespace:RoSatGCS.Behaviors"
      xmlns:cvt="clr-namespace:RoSatGCS.Utils.Converter"
      xmlns:ap="clr-namespace:RoSatGCS.Utils.AttachedProperties"
      xmlns:controls="clr-namespace:RoSatGCS.Controls"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"

      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="PageCommand">
    <Page.Resources>
        <cvt:ListBoxWidthConverter x:Key="ListBoxWidthConverter"/>
        <cvt:EnumConverter x:Key="EnumConverter"/>
        <cvt:EnumStructSizeStringConverter x:Key="EnumStructSizeStringConverter"/>
        <cvt:ByteStringConverter x:Key="ByteStringConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <Style x:Key="Splitter" TargetType="Rectangle">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Width" Value="1"/>
            <Setter Property="Margin" Value="3,6,3,6"/>
            <Setter Property="Stroke" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}"/>
        </Style>
        <TextDecorationCollection x:Key="RedDottedUnderline">
            <TextDecoration PenOffset="3" PenOffsetUnit="Pixel">
                <TextDecoration.Pen>
                    <Pen Brush="Red" Thickness="1" DashStyle="{x:Static DashStyles.Dot}"/>
                </TextDecoration.Pen>
            </TextDecoration>
        </TextDecorationCollection>
    </Page.Resources>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding Loaded}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <Grid>
        <Label>Command</Label>
        <DockingManager x:Name="dockManager" AnchorablesSource="{Binding Anchorable}" DocumentsSource="{Binding DocumentPane}" ActiveContent="{Binding ActiveDocument, Mode=TwoWay}"
                        ShowNavigator="False">
            <DockingManager.LayoutItemTemplateSelector>
                <local:PanesTemplateSelector>
                    <local:PanesTemplateSelector.CommandFilePaneTemplate>
                        <DataTemplate>
                            <Grid Margin="0,3,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Grid.RowSpan="2" BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer3BorderBrush}}" BorderThickness="0.5" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}"/>

                                <StackPanel Margin="3" Orientation="Horizontal" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" Grid.Row="0">
                                    <Button Style="{DynamicResource ToolButton}" Command="{Binding AddFile}" Margin="3,0,0,0">
                                        <Rectangle Style="{DynamicResource Icon}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconAdd}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>
                                </StackPanel>
                                <ListBox Grid.Row="1" Margin="3" ItemsSource="{Binding DataContext.SatelliteFunctionFileView, RelativeSource={RelativeSource AncestorType=Page}}" HorizontalAlignment="Stretch" AllowDrop="True"
                                         SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
                                    <b:Interaction.Behaviors>
                                        <bv:FunctionFileListBehavior DropCommand="{Binding AddFileFromDrag}"/>
                                    </b:Interaction.Behaviors>
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="LostFocus">
                                            <b:InvokeCommandAction Command="{Binding LostListFocus}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Height="20" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ListBox}, Converter={StaticResource ListBoxWidthConverter}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="24"/>
                                                    <ColumnDefinition Width="24"/>
                                                    <ColumnDefinition Width="24"/>
                                                    <ColumnDefinition Width="24"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Width="Auto" Text="{Binding Name}" TextTrimming="CharacterEllipsis" Grid.Column="0" ToolTip="{Binding FilePath}">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Valid}" Value="False">
                                                                    <Setter Property="Foreground" Value="PaleVioletRed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <ContentControl Grid.Column="1" ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.LoadingCircle}}" Visibility="{Binding Initializing, Converter={StaticResource BoolToVisibility}}"
                                                                    Foreground="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Width="12" Height="12"  Focusable="False"/>

                                                <Button Style="{DynamicResource ToolButton}" Grid.Column="2" Command="{Binding DataContext.PaneCommandFile.RefreshFile, RelativeSource={RelativeSource AncestorType=Page}}" CommandParameter="{Binding}">
                                                    <Rectangle Style="{DynamicResource Icon}" ToolTip="{loc:Localization sRefresh}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconRefresh}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>

                                                <Button Style="{DynamicResource ToolButton}" Grid.Column="3" Command="{Binding DataContext.PaneCommandFile.RemoveFile, RelativeSource={RelativeSource AncestorType=Page}}" CommandParameter="{Binding}">
                                                    <Rectangle Style="{DynamicResource Icon}" ToolTip="{loc:Localization sRemove}" >
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{StaticResource IconTrash}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>

                                                <Button Grid.Column="4" Style="{DynamicResource ToolButtonVisibility}">
                                                    <b:Interaction.Behaviors>
                                                        <bv:FunctionFileVisibilityBehavior Command="{Binding DataContext.VisibilitySwap, RelativeSource={RelativeSource AncestorType=Page}}"
                                                                                           CommandParameter="{Binding}"/>
                                                    </b:Interaction.Behaviors>
                                                    <ContentControl Content="{Binding Visibility}">
                                                        <!--{Binding DataContext.PaneCommandFile.Visibility, RelativeSource={RelativeSource AncestorType=Page}}-->
                                                        <ContentControl.ContentTemplateSelector>
                                                            <local:ShowHideTemplateSelector>
                                                                <local:ShowHideTemplateSelector.ShowTemplate>
                                                                    <DataTemplate>
                                                                        <Rectangle Style="{DynamicResource Icon}" Height="8" ToolTip="{loc:Localization sHide}">
                                                                            <Rectangle.OpacityMask>
                                                                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconShow}"/>
                                                                            </Rectangle.OpacityMask>
                                                                        </Rectangle>
                                                                    </DataTemplate>
                                                                </local:ShowHideTemplateSelector.ShowTemplate>
                                                                <local:ShowHideTemplateSelector.HideTemplate>
                                                                    <DataTemplate>
                                                                        <Rectangle Style="{DynamicResource Icon}" ToolTip="{loc:Localization sShow}">
                                                                            <Rectangle.OpacityMask>
                                                                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconHide}"/>
                                                                            </Rectangle.OpacityMask>
                                                                        </Rectangle>
                                                                    </DataTemplate>
                                                                </local:ShowHideTemplateSelector.HideTemplate>
                                                            </local:ShowHideTemplateSelector>
                                                        </ContentControl.ContentTemplateSelector>
                                                    </ContentControl>
                                                </Button>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>
                        </DataTemplate>
                    </local:PanesTemplateSelector.CommandFilePaneTemplate>
                    <local:PanesTemplateSelector.TypeDictionaryPaneTemplate>
                        <DataTemplate>
                            <Grid Margin="0,3,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Grid.RowSpan="2" BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer3BorderBrush}}" BorderThickness="0.5" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}"/>

                                <Grid Grid.Row="0" Margin="5,5,5,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="24"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Height="24" adonisExtensions:WatermarkExtension.Watermark="{loc:Localization sSearch}" Text="{Binding SearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Style="{DynamicResource PaneButton}" Grid.Column="2" ToolTip="{loc:Localization sClear}" Command="{Binding SearchClear}">
                                        <Rectangle Style="{DynamicResource Icon}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconClear}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>
                                </Grid>

                                <ListView Grid.Row="1" Margin="5,5,5,5" ItemsSource="{Binding DataContext.SatelliteFunctionTypesView, RelativeSource={RelativeSource AncestorType=Page}}"
                                          SelectedItem="{Binding SelectedItem}" ap:GridViewSort.AutoSort="True">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseDoubleClick">
                                            <b:InvokeCommandAction Command="{Binding ListItemDoubleClick}"/>
                                        </b:EventTrigger>
                                        <b:EventTrigger EventName="LostFocus">
                                            <b:InvokeCommandAction Command="{Binding LostListFocus}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <UniformGrid Columns="1">
                                                        <TextBlock Text="{Binding File}"/>
                                                        <TextBlock Text="{Binding Name}"/>
                                                    </UniformGrid>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="ToolTipService.InitialShowDelay" Value="500"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Header="{loc:Localization sName}" Width="{Binding ElementName=tdp_helperField1, Path=ActualWidth}" ap:GridViewSort.PropertyName="Name">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Name}" ToolTip="{Binding Name}" TextTrimming="CharacterEllipsis"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="{loc:Localization sFile}" Width="{Binding ElementName=tdp_helperField2, Path=ActualWidth}" ap:GridViewSort.PropertyName="File">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding File}" ToolTip="{Binding File}" TextTrimming="CharacterEllipsis"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="{loc:Localization sType}" Width="50" x:Name="tdp_col3" ap:GridViewSort.PropertyName="Type">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Type, Converter={StaticResource EnumConverter}}"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="{loc:Localization sSize}" Width="50" x:Name="tdp_col4"  ap:GridViewSort.PropertyName="Size">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Size}"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                                <Grid Grid.Row="1" Visibility="Hidden" Margin="5,5,5,5">
                                    <Grid.ColumnDefinitions>
                                        <!--Width is bound to width of the first GridViewColumn -->
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="2*"/>
                                        <!--Width is set to "Fill"-->
                                        <ColumnDefinition Width="{Binding ElementName=tdp_col3, Path=ActualWidth}"/>
                                        <!--Correction Width-->
                                        <ColumnDefinition Width="{Binding ElementName=tdp_col4, Path=ActualWidth}"/>
                                        <ColumnDefinition Width="34"/>
                                    </Grid.ColumnDefinitions>
                                    <!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid-->
                                    <Grid Grid.Column="0" x:Name="tdp_helperField1"/>
                                    <Grid Grid.Column="1" x:Name="tdp_helperField2"/>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </local:PanesTemplateSelector.TypeDictionaryPaneTemplate>
                    <local:PanesTemplateSelector.FunctionListPaneTemplate>
                        <DataTemplate>
                            <Grid Margin="10,5,10,5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>

                                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                                        <Button Style="{DynamicResource PaneButton}" ToolTip="{loc:Localization sCheckAll}" Command="{Binding CheckAll}">
                                            <Rectangle Style="{DynamicResource Icon}" Height="11" Width="11">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource IconCheckAll}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                        <Button Style="{DynamicResource PaneButton}" ToolTip="{loc:Localization sUncheckAll}" Command="{Binding UncheckAll}">
                                            <Rectangle Style="{DynamicResource Icon}" Height="11" Width="11">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource IconUncheckAll}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                        <Rectangle Style="{StaticResource Splitter}"/>
                                        <TextBlock Text="{loc:Localization sCommand}" VerticalAlignment="Center" Margin="3,0,3,0" FontSize="11"/>
                                        <ComboBox Width="100" Height="24" Margin="5,0,2,0" DisplayMemberPath="Name"
                                                  ItemsSource="{Binding DataContext.SatelliteCommandGroup, RelativeSource={RelativeSource AncestorType=Page}}"
                                                  SelectedItem="{Binding SelectedCommandGroup}">
                                            <ComboBox.Style>
                                                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding DataContext.SatelliteCommandGroup.Count, RelativeSource={RelativeSource AncestorType=Page}}" Value="0">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBox.Style>
                                        </ComboBox>
                                        <Button Style="{DynamicResource PaneButton}" ToolTip="{loc:Localization sAdd}" Command="{Binding AddToCommand}">
                                            <Rectangle Style="{DynamicResource Icon}" Height="10" Width="13">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource IconStackAdd}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>

                                        <Rectangle Style="{StaticResource Splitter}"/>

                                    </StackPanel>

                                    <TextBox MinWidth="30" Margin="0,0,24,0" Grid.Column="1" Height="24" adonisExtensions:WatermarkExtension.Watermark="{loc:Localization sSearch}"
                                             Text="{Binding SearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Column="1" HorizontalAlignment="Right" Style="{DynamicResource PaneButton}" ToolTip="{loc:Localization sClear}" Command="{Binding SearchClear}">
                                        <Rectangle Style="{DynamicResource Icon}">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconClear}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>
                                </Grid>

                                <ListView Grid.Row="1" ItemsSource="{Binding DataContext.SatelliteMethodView, RelativeSource={RelativeSource AncestorType=Page}}"
                                          x:Name="FunctionList" ap:GridViewSort.AutoSort="True" SelectionMode="Extended">
                                    <ListView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="{loc:Localization sAdd}" Command="{Binding AddToCommandSelected}"/>
                                            <Separator/>
                                            <MenuItem Header="{loc:Localization sSelect}" Command="{Binding Select}"/>
                                            <MenuItem Header="{loc:Localization sDeselect}" Command="{Binding Deselect}"/>
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                    <b:Interaction.Behaviors>
                                        <bv:CommandListDoubleClickBehavior Parent="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Page}}"/>
                                    </b:Interaction.Behaviors>
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="LostFocus">
                                            <b:InvokeCommandAction Command="{Binding LostListFocus}" CommandParameter="{Binding ElementName=FunctionList}"/>
                                        </b:EventTrigger>
                                        <b:EventTrigger EventName="SelectionChanged">
                                            <b:InvokeCommandAction Command="{Binding UpdateSelectedItems}" CommandParameter="{Binding Path=SelectedItems, ElementName=FunctionList}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Width="{Binding ElementName=flp_helperField0, Path=ActualWidth}">
                                                <GridViewColumnHeader IsEnabled="False"/>
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="{loc:Localization sFile}" Width="{Binding ElementName=flp_helperField1, Path=ActualWidth}" ap:GridViewSort.PropertyName="File">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding File}" ToolTip="{Binding File}" TextTrimming="CharacterEllipsis"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="ID" Width="35" x:Name="flp_col2" ap:GridViewSort.PropertyName="Id">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Id}"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="{loc:Localization sName}" Width="{Binding ElementName=flp_helperField2, Path=ActualWidth}" ap:GridViewSort.PropertyName="Name">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Name}" ToolTip="{Binding Name}" TextTrimming="CharacterEllipsis"/>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="{loc:Localization sDescription}" Width="{Binding ElementName=flp_helperField3, Path=ActualWidth}" ap:GridViewSort.PropertyName="Description">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Description}" ToolTip="{Binding Description}" TextTrimming="CharacterEllipsis">
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="True">
                                                                            <Setter Property="TextWrapping" Value="Wrap"/>
                                                                            <Setter Property="MaxHeight" Value="100"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>

                                <Grid Visibility="Hidden">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30"/>
                                        <!--Width is bound to width of the first GridViewColumn -->
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="{Binding ElementName=flp_col2, Path=ActualWidth}"/>
                                        <!--Width is set to "Fill"-->
                                        <ColumnDefinition Width="5*"/>
                                        <!--Correction Width-->
                                        <ColumnDefinition Width="8*"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    <!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid-->
                                    <Grid Grid.Column="0" x:Name="flp_helperField0"/>
                                    <Grid Grid.Column="1" x:Name="flp_helperField1"/>
                                    <Grid Grid.Column="3" x:Name="flp_helperField2"/>
                                    <Grid Grid.Column="4" x:Name="flp_helperField3"/>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </local:PanesTemplateSelector.FunctionListPaneTemplate>
                    <local:PanesTemplateSelector.FunctionPropertyPaneTemplate>
                        <DataTemplate>
                            <Grid Margin="10,5,10,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="35"/>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" Orientation="Horizontal">
                                    <TextBlock Text="ID" FontWeight="Bold" Margin="4,0,8,0"/>
                                    <TextBlock Text="{Binding Command.Id}" Margin="0,0,15,0"/>
                                    <Rectangle Style="{StaticResource Splitter}" Height="12" VerticalAlignment="Top" Margin="3,3,3,3"/>
                                    <TextBlock Text="{loc:Localization sFile}" FontWeight="Bold" Margin="5,0,10,0"/>
                                    <TextBlock Text="{Binding Command.File}" Margin="0,0,15,0"/>
                                    <Rectangle Style="{StaticResource Splitter}" Height="12" VerticalAlignment="Top" Margin="3,3,3,3"/>
                                    <TextBlock Text="{loc:Localization sName}" FontWeight="Bold" Margin="5,0,10,0"/>
                                    <TextBlock Text="{Binding Command.Name}" Margin="0,0,15,0" />
                                    <Rectangle Style="{StaticResource Splitter}" Height="12" VerticalAlignment="Top" Margin="3,3,3,3"/>
                                    <TextBlock Text="{loc:Localization sSize}" FontWeight="Bold" Margin="5,0,10,0"/>
                                    <TextBlock Text="{Binding Command.InSize, Converter={StaticResource ByteStringConverter}}"/>
                                    <TextBlock Text=" / "/>
                                    <TextBlock Text="{Binding Command.OutSize, Converter={StaticResource ByteStringConverter}}" Margin="0,0,15,0" />
                                </StackPanel>

                                <Border Grid.Row="1" BorderThickness="0,0,0,0.4" BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer2BorderBrush}}">
                                    <ScrollViewer>
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Text="{Binding Command.Description}" TextWrapping="Wrap"/>
                                            <WrapPanel Margin="5,4,0,0" Visibility="{Binding HasInput, Converter={StaticResource BoolToVisibility}}" Cursor="Hand">
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="MouseLeftButtonDown">
                                                        <b:InvokeCommandAction Command="{Binding ParametersClick}"/>
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                                <TextBlock Text="{loc:Localization sParameters}" FontWeight="Bold"/>
                                                <ContentControl Content="{Binding IsParametersVisible}" Margin="3,0,0,0" ContentTemplateSelector="{StaticResource ShowHideIconTemplate}"/>
                                            </WrapPanel>
                                            <Grid Visibility="{Binding IsParametersVisible, Converter={StaticResource BoolToVisibility}}">
                                                <Grid.Style>
                                                    <Style TargetType="Grid">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Command.IsExecuting}" Value="True">
                                                                <Setter Property="Effect">
                                                                    <Setter.Value>
                                                                        <BlurEffect Radius="1"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>
                                                <ListBox ItemsSource="{Binding InputParameters}"
                                                     ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                     ScrollViewer.VerticalScrollBarVisibility="Disabled"  bv:PassMouseWheelBehavior.EnableMouseWheelPass="True">
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <controls:ParameterBox Grid.Column="0" Parameter="{Binding}" Width="250"/>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="ListBoxItem">
                                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                            <Setter Property="MaxHeight" Value="145"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                    <ListBox.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel VerticalAlignment="Top" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                                        </ItemsPanelTemplate>
                                                    </ListBox.ItemsPanel>
                                                </ListBox>
                                                <Border Visibility="{Binding Command.IsExecuting, Converter={StaticResource BoolToVisibility}}" Background="#A0FFFFFF">
                                                    <ContentControl ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.LoadingCircle}}"
                                                     Foreground="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Width="12" Height="12"  Focusable="False"/>
                                                </Border>
                                            </Grid>


                                            <WrapPanel Margin="5,4,0,0" Visibility="{Binding HasOutput, Converter={StaticResource BoolToVisibility}}" Cursor="Hand">
                                                <b:Interaction.Triggers>
                                                    <b:EventTrigger EventName="MouseLeftButtonDown">
                                                        <b:InvokeCommandAction Command="{Binding ResultsClick}"/>
                                                    </b:EventTrigger>
                                                </b:Interaction.Triggers>
                                                <TextBlock Text="{loc:Localization sResults}" FontWeight="Bold"/>
                                                <ContentControl Content="{Binding IsResultsVisible}" Margin="3,0,0,0" ContentTemplateSelector="{StaticResource ShowHideIconTemplate}"/>
                                            </WrapPanel>
                                            <Grid Visibility="{Binding IsResultsVisible, Converter={StaticResource BoolToVisibility}}">
                                                <Grid.Style>
                                                    <Style TargetType="Grid">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Command.IsExecuting}" Value="True">
                                                                <Setter Property="Effect">
                                                                    <Setter.Value>
                                                                        <BlurEffect Radius="1"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>
                                                <ListBox ItemsSource="{Binding OutputParameters}"
                                                ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                ScrollViewer.VerticalScrollBarVisibility="Disabled"  bv:PassMouseWheelBehavior.EnableMouseWheelPass="True">
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <controls:ParameterBox Grid.Column="0" Parameter="{Binding}" Width="250"/>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="ListBoxItem">
                                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                            <Setter Property="MaxHeight" Value="145"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                    <ListBox.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel VerticalAlignment="Top" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
                                                        </ItemsPanelTemplate>
                                                    </ListBox.ItemsPanel>
                                                </ListBox>
                                                <Border Grid.ColumnSpan="5" Visibility="{Binding Command.IsExecuting, Converter={StaticResource BoolToVisibility}}" Background="#A0FFFFFF">
                                                    <ContentControl ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.LoadingCircle}}"
                                                    Foreground="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Width="12" Height="12"  Focusable="False"/>
                                                </Border>
                                            </Grid>
                                        </StackPanel>
                                    </ScrollViewer>
                                </Border>

                                <StackPanel Grid.Row="2" HorizontalAlignment="Right" Orientation="Horizontal" VerticalAlignment="Bottom">
                                    <Button Content="{loc:Localization sExecute}" VerticalAlignment="Center" Width="80" Height="24" Margin="2" Command="{Binding Execute}"/>
                                    <Button Content="{loc:Localization sSave}" VerticalAlignment="Center" Width="80" Height="24" Margin="2" Command="{Binding Save}"/>
                                    <Button Content="{loc:Localization sClose}" VerticalAlignment="Center" Width="80" Height="24" Margin="2" Command="{Binding Close}"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </local:PanesTemplateSelector.FunctionPropertyPaneTemplate>
                    <local:PanesTemplateSelector.CommandSetPaneTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="38"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Margin="10,0,10,0" Grid.Row="0" BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}" BorderThickness="0,0,0,0.5">
                                    <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                                        <TextBlock Text="{loc:Localization sGroup}" VerticalAlignment="Center" Margin="0,0,10,2" FontSize="11"/>
                                        <TextBox Height="24" Width="100" VerticalAlignment="Center" Text="{Binding GroupAddName, UpdateSourceTrigger=PropertyChanged}"
                                             adonisExtensions:WatermarkExtension.Watermark="{loc:Localization sName}">
                                            <TextBox.InputBindings>
                                                <KeyBinding Command="{Binding GroupAdd}" Key="Enter"/>
                                            </TextBox.InputBindings>
                                        </TextBox>
                                        <Button Style="{DynamicResource PaneButton}" ToolTip="{loc:Localization sAdd}" Command="{Binding GroupAdd}">
                                            <Rectangle Style="{DynamicResource Icon}" Height="10" Width="12">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource IconAddGroup}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                        <Rectangle Style="{StaticResource Splitter}"/>
                                        <Button Style="{DynamicResource PaneButton}" ToolTip="{loc:Localization sDeleteAll}" Command="{Binding DeleteAll}">
                                            <Rectangle Style="{DynamicResource Icon}" Height="10" Width="10">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource IconTrash}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                    </StackPanel>
                                </Border>

                                <ScrollViewer Grid.Row="1">
                                    <ListBox x:Name="CommandSetListBox" ItemsSource="{Binding DataContext.SatelliteCommandGroupView, RelativeSource={RelativeSource AncestorType=Page}}"
                                             ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedItem="{x:Null}"
                                             ScrollViewer.VerticalScrollBarVisibility="Disabled"  bv:PassMouseWheelBehavior.EnableMouseWheelPass="True">
                                        <b:Interaction.Behaviors>
                                            <bv:CommandListRearrangeBehavior Parent="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Page}}"/>
                                        </b:Interaction.Behaviors>
                                        
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border Padding="5" BorderThickness="0.5" BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="24"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                        <Expander Grid.RowSpan="2" Padding="0" BorderThickness="0"  HorizontalAlignment="Stretch">
                                                            <Expander.Header>
                                                                <WrapPanel>
                                                                    <TextBox Margin="0,-1,0,0" Height="18" VerticalAlignment="Top" Text="{Binding Rename, Mode=TwoWay}"
                                                                         bv:TextBoxFocusBehavior.IsFocused="{Binding IsRename}"
                                                                         Visibility="{Binding IsRename, Converter={StaticResource BoolToVisibility}}">
                                                                        <b:Interaction.Triggers>
                                                                            <b:EventTrigger EventName="LostFocus">
                                                                                <b:InvokeCommandAction Command="{Binding ApplyRename}"/>
                                                                            </b:EventTrigger>
                                                                            <b:EventTrigger EventName="PreviewKeyDown">
                                                                                <b:InvokeCommandAction Command="{Binding RenameKeyDown}"/>
                                                                            </b:EventTrigger>
                                                                        </b:Interaction.Triggers>
                                                                        <TextBox.Style>
                                                                            <Style TargetType="TextBox"/>
                                                                        </TextBox.Style>
                                                                    </TextBox>
                                                                    <TextBlock Text="{Binding Name}" Visibility="{Binding IsNotRename, Converter={StaticResource BoolToVisibility}}"/>

                                                                    <Button Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="3,1,0,0" Style="{DynamicResource TipButton}" Command="{Binding RenameCommandGroup}">
                                                                        <Rectangle Style="{DynamicResource Icon}" ToolTip="{loc:Localization sRename}" Width="7" Height="7">
                                                                            <Rectangle.OpacityMask>
                                                                                <VisualBrush Stretch="Fill" Visual="{StaticResource IconEdit}" />
                                                                            </Rectangle.OpacityMask>
                                                                        </Rectangle>
                                                                    </Button>
                                                                </WrapPanel>
                                                            </Expander.Header>
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="16"/>
                                                                </Grid.RowDefinitions>
                                                                <ListBox x:Name="CommandGroupList" ItemsSource="{Binding Commands}" Padding="0,3,0,0"
                                                                      ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                                      ScrollViewer.VerticalScrollBarVisibility="Disabled"  bv:PassMouseWheelBehavior.EnableMouseWheelPass="True"
                                                                      SelectionMode="Extended">
                                                                    <b:Interaction.Behaviors>
                                                                        <bv:CommandListDoubleClickBehavior Parent="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Page}}"/>
                                                                    </b:Interaction.Behaviors>
                                                                    <b:Interaction.Triggers>
                                                                        <b:EventTrigger EventName="LostFocus">
                                                                            <b:InvokeCommandAction Command="{Binding LostListFocus}" CommandParameter="{Binding ElementName=CommandGroupList}"/>
                                                                        </b:EventTrigger>
                                                                        <b:EventTrigger EventName="SelectionChanged">
                                                                            <b:InvokeCommandAction Command="{Binding UpdateSelectedItems}" CommandParameter="{Binding Path=SelectedItems, ElementName=CommandGroupList}"/>
                                                                        </b:EventTrigger>
                                                                    </b:Interaction.Triggers>
                                                                    <ListBox.ContextMenu>
                                                                        <ContextMenu>
                                                                            <MenuItem Header="{loc:Localization sExecuteOnce}" Command="{Binding ExecuteOnce}"/>
                                                                            <MenuItem Header="{loc:Localization sPreview}" Command="{Binding OpenPreview}">
                                                                                <MenuItem.CommandParameter>
                                                                                    <sys:Boolean>false</sys:Boolean>
                                                                                </MenuItem.CommandParameter>
                                                                            </MenuItem>
                                                                            <Separator/>
                                                                            <MenuItem Header="{loc:Localization sDelete}" Command="{Binding DeleteItem}"/>
                                                                            <Separator Visibility="{Binding IsSingleSelection, Converter={StaticResource cvtBoolVisibility}}"/>
                                                                            <MenuItem Header="{loc:Localization sProperties}" Visibility="{Binding IsSingleSelection, Converter={StaticResource cvtBoolVisibility}}"
                                                                                  Command="{Binding OpenProperty}"/>
                                                                        </ContextMenu>
                                                                    </ListBox.ContextMenu>
                                                                    <ListBox.ItemTemplate>
                                                                        <DataTemplate>
                                                                            <Grid Height="20">
                                                                                <Grid>
                                                                                    <Grid.Style>
                                                                                        <Style TargetType="Grid">
                                                                                            <Style.Triggers>
                                                                                                <DataTrigger Binding="{Binding IsExecuting}" Value="True">
                                                                                                    <Setter Property="Effect">
                                                                                                        <Setter.Value>
                                                                                                            <BlurEffect Radius="1"/>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </DataTrigger>
                                                                                            </Style.Triggers>
                                                                                        </Style>
                                                                                    </Grid.Style>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="30"/>
                                                                                        <ColumnDefinition Width="10"/>
                                                                                        <ColumnDefinition Width="*"/>
                                                                                        <ColumnDefinition Width="10"/>
                                                                                        <ColumnDefinition Width="3*"/>
                                                                                        <ColumnDefinition Width="20"/>
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <TextBlock Grid.Column="0" Text="{Binding GroupIndex}" Margin="5,0,0,0"/>
                                                                                    <Rectangle Grid.Column="1" Margin="3,4,5,4" Style="{StaticResource Splitter}" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
                                                                                    <TextBlock Grid.Column="2" Text="{Binding File}" TextTrimming="CharacterEllipsis"
                                                                                           Width="{Binding ElementName=cmd_helperField0, Path=ActualWidth}"/>
                                                                                    <Rectangle Grid.Column="3" Margin="3,4,5,4" Style="{StaticResource Splitter}" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
                                                                                    <TextBlock Grid.Column="4" Text="{Binding Name}" TextTrimming="CharacterEllipsis"
                                                                                        Width="{Binding ElementName=cmd_helperField1, Path=ActualWidth}"/>
                                                                                    <Button Grid.Column="5" Style="{DynamicResource ToolButton}" Background="Transparent" Command="{Binding Execute}">
                                                                                        <Grid>
                                                                                            <Grid.Style>
                                                                                                <Style TargetType="Grid">
                                                                                                    <Style.Triggers>
                                                                                                        <DataTrigger Binding="{Binding IsValid}" Value="False">
                                                                                                            <Setter Property="ToolTip" Value="{loc:Localization sInvalid}"/>
                                                                                                        </DataTrigger>
                                                                                                        <DataTrigger Binding="{Binding IsValid}" Value="True">
                                                                                                            <Setter Property="ToolTip" Value="{loc:Localization sRun}"/>
                                                                                                        </DataTrigger>
                                                                                                    </Style.Triggers>
                                                                                                </Style>
                                                                                            </Grid.Style>
                                                                                            <Rectangle Width="8" Height="10">
                                                                                                <Rectangle.Style>
                                                                                                    <Style TargetType="Rectangle">
                                                                                                        <Style.Triggers>
                                                                                                            <DataTrigger Binding="{Binding IsValid}" Value="False">
                                                                                                                <Setter Property="Fill" Value="LightCoral"/>
                                                                                                            </DataTrigger>
                                                                                                            <DataTrigger Binding="{Binding IsValid}" Value="True">
                                                                                                                <Setter Property="Fill" Value="Transparent"/>
                                                                                                            </DataTrigger>
                                                                                                        </Style.Triggers>
                                                                                                    </Style>
                                                                                                </Rectangle.Style>
                                                                                                <Rectangle.OpacityMask>
                                                                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource IconRunFill}"/>
                                                                                                </Rectangle.OpacityMask>
                                                                                            </Rectangle>
                                                                                            <Rectangle Style="{DynamicResource Icon}" Width="8" Height="10">
                                                                                                <Rectangle.OpacityMask>
                                                                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource IconRun}"/>
                                                                                                </Rectangle.OpacityMask>
                                                                                            </Rectangle>
                                                                                        </Grid>
                                                                                    </Button>
                                                                                </Grid>
                                                                                <Border Grid.ColumnSpan="5" Visibility="{Binding IsExecuting, Converter={StaticResource BoolToVisibility}}" Background="#A0FFFFFF">
                                                                                    <ContentControl ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.LoadingCircle}}"
                                                                                    Foreground="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" Width="12" Height="12"  Focusable="False"/>
                                                                                </Border>
                                                                            </Grid>
                                                                        </DataTemplate>
                                                                    </ListBox.ItemTemplate>
                                                                    <ListBox.ItemContainerStyle>
                                                                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                                            <Setter Property="Padding" Value="0,0,0,0"/>
                                                                            <Setter Property="ToolTip">
                                                                                <Setter.Value>
                                                                                    <UniformGrid Columns="1">
                                                                                        <TextBlock Text="{Binding File}"/>
                                                                                        <TextBlock Text="{Binding Name}"/>
                                                                                    </UniformGrid>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </ListBox.ItemContainerStyle>
                                                                </ListBox>
                                                                <WrapPanel Grid.Row="1" Margin="0,2,5,0" HorizontalAlignment="Right" VerticalAlignment="Top">
                                                                    <TextBlock Text="Updated: " FontSize="10"/>
                                                                    <TextBlock Text="{Binding ElapsedTime}" FontSize="10"/>
                                                                </WrapPanel>
                                                            </Grid>
                                                        </Expander>

                                                        <Button HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,0,0" Style="{DynamicResource ToolButton}" 
                                                            Background="Transparent" Command="{Binding ExecuteAll}" ToolTip="{loc:Localization sRunAll}">
                                                            <Rectangle Style="{DynamicResource Icon}" Width="10" Height="10">
                                                                <Rectangle.OpacityMask>
                                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource IconRunAll}" />
                                                                </Rectangle.OpacityMask>
                                                            </Rectangle>
                                                        </Button>

                                                        <Button HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,22,0" Style="{DynamicResource ToolButton}"
                                                        Background="Transparent">
                                                            <Rectangle Style="{DynamicResource Icon}" ToolTip="{loc:Localization sProperties}" Width="10" Height="10">
                                                                <Rectangle.OpacityMask>
                                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource IconSetting}" />
                                                                </Rectangle.OpacityMask>
                                                            </Rectangle>
                                                        </Button>

                                                        <WrapPanel Grid.Row="0" Margin="0,4,55,0" HorizontalAlignment="Right" VerticalAlignment="Top">
                                                            <TextBlock Text="Period: " FontSize="10"/>
                                                            <TextBlock Text="10 sec" FontSize="10"/>
                                                        </WrapPanel>

                                                        <Grid Visibility="Visible">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="30"/>
                                                                <ColumnDefinition Width="10"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="10"/>
                                                                <ColumnDefinition Width="3*"/>
                                                                <ColumnDefinition Width="20"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid Grid.Column="2" x:Name="cmd_helperField0"/>
                                                            <Grid Grid.Column="4" x:Name="cmd_helperField1"/>
                                                        </Grid>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                <Setter Property="ContextMenu">
                                                    <Setter.Value>
                                                        <ContextMenu>
                                                            <MenuItem Header="{loc:Localization sExecuteAll}" Command="{Binding ExecuteAll}"/>
                                                            <Separator/>
                                                            <MenuItem Header="{loc:Localization sRename}" Command="{Binding RenameCommandGroup}"/>
                                                            <MenuItem Header="{loc:Localization sDelete}" Command="{Binding DeleteCommandGroup}"/>
                                                            <Separator/>
                                                            <MenuItem Header="{loc:Localization sProperties}"/>
                                                        </ContextMenu>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                    </ListBox>
                                </ScrollViewer>
                            </Grid>
                        </DataTemplate>
                    </local:PanesTemplateSelector.CommandSetPaneTemplate>
                    <local:PanesTemplateSelector.TypeSummaryPaneTemplate>
                        <DataTemplate>
                            <Grid x:Name="typeSummaryGrid" Margin="10,5,10,5" >
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="Loaded">
                                        <b:InvokeCommandAction Command="{Binding SizeChanged}">
                                            <b:InvokeCommandAction.CommandParameter>
                                                <Binding ElementName="typeSummaryGrid"/>
                                            </b:InvokeCommandAction.CommandParameter>
                                        </b:InvokeCommandAction>
                                    </b:EventTrigger>
                                    <b:EventTrigger EventName="SizeChanged">
                                        <b:InvokeCommandAction Command="{Binding SizeChanged}">
                                            <b:InvokeCommandAction.CommandParameter>
                                                <Binding ElementName="typeSummaryGrid"/>
                                            </b:InvokeCommandAction.CommandParameter>
                                        </b:InvokeCommandAction>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="{loc:Localization sName}" FontWeight="Bold"/>
                                        <TextBlock Text="{Binding SatFuncType.Identifier}" TextWrapping="Wrap" Margin="5,3,0,10"/>
                                        <TextBlock Text="{loc:Localization sDescription}" FontWeight="Bold"/>
                                        <TextBlock Text="{Binding SatFuncType.Description}" TextWrapping="Wrap" Margin="5,3,0,10"/>
                                        <WrapPanel>
                                            <TextBlock Text="{loc:Localization sParameters}" FontWeight="Bold"/>
                                            <TextBlock Text=" [" FontWeight="Bold"/>
                                            <TextBlock Text="{Binding SatFuncType.Type, Converter={StaticResource EnumConverter}}" FontWeight="Bold"/>
                                            <TextBlock Text="]" FontWeight="Bold"/>
                                            <TextBlock Text="{Binding SatFuncType.Size}" Margin="10,2,0,0" FontWeight="Bold" FontSize="11" VerticalAlignment="Center"/>
                                            <TextBlock Text="{Binding SatFuncType.Type, Converter={StaticResource EnumStructSizeStringConverter}}" Margin="3,2,0,0" FontWeight="Bold" FontSize="11" VerticalAlignment="Center"/>
                                        </WrapPanel>


                                        <ListBox ItemsSource="{Binding SatFuncType.Parameters}" ScrollViewer.CanContentScroll="False"
                                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled"  bv:PassMouseWheelBehavior.EnableMouseWheelPass="True">
                                            <ListBox.ItemTemplateSelector>
                                                <local:TypeSummaryListTemplateSelector>
                                                    <local:TypeSummaryListTemplateSelector.StructTypeTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="17"/>
                                                                    <RowDefinition Height="15"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="40"/>
                                                                    <ColumnDefinition Width="25"/>
                                                                    <ColumnDefinition Width="30"/>
                                                                    <ColumnDefinition Width="55"/>
                                                                    <ColumnDefinition Width="35"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Text="Index" Grid.Row="0" Grid.Column="0" FontWeight="Bold"/>
                                                                <TextBlock Text="{Binding Index}" Grid.Row="0" Grid.Column="1"/>
                                                                <TextBlock Text="Size" Grid.Row="0" Grid.Column="2" FontWeight="Bold"/>
                                                                <Rectangle Grid.Column="1" Grid.Row="0" Margin="3,3,3,0" Style="{StaticResource Splitter}" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
                                                                <WrapPanel Grid.Row="0" Grid.Column="3">
                                                                    <TextBlock Text="{Binding ByteSize}"/>
                                                                    <TextBlock Text=" Bytes"/>
                                                                </WrapPanel>
                                                                <Rectangle Grid.Column="3" Grid.Row="0" Margin="3,3,3,0" Style="{StaticResource Splitter}" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
                                                                <TextBlock Text="Type" Grid.Row="0" Grid.Column="4" FontWeight="Bold"/>
                                                                <TextBlock Text="{Binding DataTypeString}" Grid.Row="0" Grid.Column="5" TextTrimming="CharacterEllipsis" ToolTip="{Binding DataTypeString}" HorizontalAlignment="Left">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Style.Triggers>
                                                                                <MultiDataTrigger>
                                                                                    <MultiDataTrigger.Conditions>
                                                                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                                        <Condition Binding="{Binding IsUserDefined}" Value="True"/>
                                                                                    </MultiDataTrigger.Conditions>
                                                                                    <Setter Property="Cursor" Value="Hand"/>
                                                                                </MultiDataTrigger>
                                                                                <DataTrigger Binding="{Binding IsUserDefined}" Value="True">
                                                                                    <Setter Property="TextDecorations" Value="{StaticResource RedDottedUnderline}"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                    <b:Interaction.Triggers>
                                                                        <b:EventTrigger EventName="MouseLeftButtonDown">
                                                                            <b:InvokeCommandAction Command="{Binding DataContext.TypeHyperLinkClick, RelativeSource={RelativeSource AncestorType=Page}}" CommandParameter="{Binding}"/>
                                                                        </b:EventTrigger>
                                                                    </b:Interaction.Triggers>
                                                                </TextBlock>
                                                                <TextBlock Text="Name" Grid.Row="1" Grid.Column="0" FontWeight="Bold"/>
                                                                <TextBlock Text="{Binding Name}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="5" TextTrimming="CharacterEllipsis" ToolTip="{Binding Name}" HorizontalAlignment="Left"/>
                                                                <TextBlock Text="{Binding Description}" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6" TextWrapping="Wrap" Margin="5,0,0,8"/>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </local:TypeSummaryListTemplateSelector.StructTypeTemplate>
                                                    <local:TypeSummaryListTemplateSelector.EnumTemplate>
                                                        <DataTemplate>
                                                            <Grid VerticalAlignment="Top">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="20"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="26"/>
                                                                    <ColumnDefinition Width="40"/>
                                                                    <ColumnDefinition Width="45"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Text="ID :" Grid.Row="0" Grid.Column="0" FontWeight="Bold"/>
                                                                <TextBlock Text="{Binding Id}" Grid.Row="0" Grid.Column="1" FontWeight="Bold"/>
                                                                <Rectangle Grid.Column="1" Grid.Row="0" Margin="3,3,3,6" Style="{StaticResource Splitter}" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
                                                                <TextBlock Text="Value" Grid.Row="0" Grid.Column="2" FontWeight="Bold" Margin="5,0,0,0"/>
                                                                <TextBlock Text="{Binding Name}" Grid.Row="0" Grid.Column="3" TextTrimming="CharacterEllipsis" ToolTip="{Binding Name}"/>
                                                                <TextBlock Text="{Binding Description}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" TextWrapping="Wrap" Margin="5,0,0,8"/>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </local:TypeSummaryListTemplateSelector.EnumTemplate>
                                                </local:TypeSummaryListTemplateSelector>
                                            </ListBox.ItemTemplateSelector>

                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="ListBoxItem">
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <!--
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter> -->
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                            <ListBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <UniformGrid Columns="{Binding GridColumn}"/>
                                                </ItemsPanelTemplate>
                                            </ListBox.ItemsPanel>
                                        </ListBox>
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>
                        </DataTemplate>
                    </local:PanesTemplateSelector.TypeSummaryPaneTemplate>
                    <local:PanesTemplateSelector.PropertyPreviewPaneTemplate>
                        <DataTemplate>
                            <Grid x:Name="propertyPreviewGrid">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="Loaded">
                                        <b:InvokeCommandAction Command="{Binding SizeChanged}">
                                            <b:InvokeCommandAction.CommandParameter>
                                                <Binding ElementName="propertyPreviewGrid"/>
                                            </b:InvokeCommandAction.CommandParameter>
                                        </b:InvokeCommandAction>
                                    </b:EventTrigger>
                                    <b:EventTrigger EventName="SizeChanged">
                                        <b:InvokeCommandAction Command="{Binding SizeChanged}">
                                            <b:InvokeCommandAction.CommandParameter>
                                                <Binding ElementName="propertyPreviewGrid"/>
                                            </b:InvokeCommandAction.CommandParameter>
                                        </b:InvokeCommandAction>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{Binding CommandModel.Name}" FontWeight="Bold" Margin="10,5,10,0"/>
                                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                                    <ListBox ItemsSource="{Binding CommandModel.ResultParameters}" ScrollViewer.CanContentScroll="False" bv:PassMouseWheelBehavior.EnableMouseWheelPass="True"
                                        ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled"  >
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Height="40">
                                                    <controls:ParameterView Parameter="{Binding}"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>

                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="Focusable" Value="False"/>
                                                <!--<Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                -->
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <UniformGrid HorizontalAlignment="Stretch" VerticalAlignment="Top" Columns="{Binding GridColumn}"/>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                    </ListBox>
                                </ScrollViewer>
                            </Grid>
                        </DataTemplate>
                    </local:PanesTemplateSelector.PropertyPreviewPaneTemplate>
                </local:PanesTemplateSelector>
            </DockingManager.LayoutItemTemplateSelector>
            <DockingManager.LayoutItemContainerStyleSelector>
                <local:PanesStyleSelector>
                    <local:PanesStyleSelector.CommandFilePaneStyle>
                        <Style TargetType="{x:Type LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{loc:Localization sCommandFile}"/>
                            <Setter Property="CanMove" Value="False"/>
                            <Setter Property="CanFloat" Value="False"/>
                            <Setter Property="CanClose" Value="False"/>
                            <Setter Property="CanHide" Value="False"/>
                        </Style>
                    </local:PanesStyleSelector.CommandFilePaneStyle>
                    <local:PanesStyleSelector.TypeDictionaryPaneStyle>
                        <Style TargetType="{x:Type LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{loc:Localization sTypeDictionary}"/>
                            <Setter Property="CanMove" Value="False"/>
                            <Setter Property="CanFloat" Value="False"/>
                            <Setter Property="CanClose" Value="False"/>
                            <Setter Property="CanHide" Value="False"/>
                        </Style>
                    </local:PanesStyleSelector.TypeDictionaryPaneStyle>

                    <local:PanesStyleSelector.FunctionListPaneStyle>
                        <Style TargetType="{x:Type LayoutDocumentItem}">
                            <Setter Property="Title" Value="{loc:Localization sFunctions}"/>
                            <Setter Property="CanClose" Value="False"/>
                        </Style>
                    </local:PanesStyleSelector.FunctionListPaneStyle>

                    <local:PanesStyleSelector.CommandSetPaneStyle>
                        <Style TargetType="{x:Type LayoutDocumentItem}">
                            <Setter Property="Title" Value="{loc:Localization sCommandSet}"/>
                            <Setter Property="CanClose" Value="False"/>
                        </Style>
                    </local:PanesStyleSelector.CommandSetPaneStyle>

                    <local:PanesStyleSelector.TypeSummaryPaneStyle>
                        <Style TargetType="{x:Type LayoutDocumentItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}"/>
                            <Setter Property="CanClose" Value="True"/>
                            <Setter Property="CloseCommand" Value="{Binding Model.Close}"/>
                        </Style>
                    </local:PanesStyleSelector.TypeSummaryPaneStyle>
                    <local:PanesStyleSelector.FunctionPropertyPaneStyle>
                        <Style TargetType="{x:Type LayoutDocumentItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}"/>
                            <Setter Property="CanClose" Value="True"/>
                            <Setter Property="CloseCommand" Value="{Binding Model.Close}"/>
                        </Style>
                    </local:PanesStyleSelector.FunctionPropertyPaneStyle>
                    <local:PanesStyleSelector.PropertyPreviewPaneStyle>
                        <Style TargetType="{x:Type LayoutDocumentItem}">
                            <Setter Property="Title" Value="Property Preview"/>
                            <Setter Property="CanClose" Value="True"/>
                            <Setter Property="CloseCommand" Value="{Binding Model.Close}"/>
                        </Style>
                    </local:PanesStyleSelector.PropertyPreviewPaneStyle>
                </local:PanesStyleSelector>
            </DockingManager.LayoutItemContainerStyleSelector>
            <DockingManager.LayoutUpdateStrategy>
                <local:PanesLayoutInitializer/>
            </DockingManager.LayoutUpdateStrategy>

            <LayoutRoot>
                <LayoutPanel Orientation="Horizontal">
                    <LayoutAnchorablePaneGroup DockWidth="300" Orientation="Vertical">
                        <LayoutAnchorablePane Name="CommandFilePane" DockHeight="2*"/>
                        <LayoutAnchorablePane Name="TypeDictionaryPane"/>
                    </LayoutAnchorablePaneGroup>
                </LayoutPanel>
            </LayoutRoot>
        </DockingManager>
    </Grid>
</Page>
