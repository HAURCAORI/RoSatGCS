<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MenuFile" xml:space="preserve">
    <value>_File</value>
  </data>
  <data name="MenuHelp" xml:space="preserve">
    <value>_Help</value>
  </data>
  <data name="MenuTool" xml:space="preserve">
    <value>_Tool</value>
  </data>
  <data name="MenuView" xml:space="preserve">
    <value>_View</value>
  </data>
  <data name="MenuWindow" xml:space="preserve">
    <value>_Window</value>
  </data>
  <data name="sApply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="sArchive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="sCommand" xml:space="preserve">
    <value>Command</value>
  </data>
  <data name="sConnect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="sDashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="sDatabase" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="sDownlink" xml:space="preserve">
    <value>Downlink</value>
  </data>
  <data name="sGroundTrack" xml:space="preserve">
    <value>Ground Track</value>
  </data>
  <data name="sProcessor" xml:space="preserve">
    <value>Processor</value>
  </data>
  <data name="sRefresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="sScheduler" xml:space="preserve">
    <value>Scheduler</value>
  </data>
  <data name="sSerial" xml:space="preserve">
    <value>Serial</value>
  </data>
  <data name="sSetting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="sUplink" xml:space="preserve">
    <value>Uplink</value>
  </data>
  <data name="TopBarPreset" xml:space="preserve">
    <value>Sat. Preset</value>
  </data>
  <data name="TopBarSchedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="TopBarSerialPort" xml:space="preserve">
    <value>Serial Port</value>
  </data>
  <data name="TopBarStatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="TopBarTime" xml:space="preserve">
    <value>Local Time</value>
  </data>
  <data name="Korean" xml:space="preserve">
    <value>Korean</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="zFileNotFound" xml:space="preserve">
    <value>File not found</value>
  </data>
  <data name="zNoSuchFile" xml:space="preserve">
    <value>No such file.</value>
  </data>
  <data name="zExtensionJson" xml:space="preserve">
    <value>Extension must be json.</value>
  </data>
  <data name="zExtensionMismatch" xml:space="preserve">
    <value>Extension mismatch</value>
  </data>
  <data name="zSameFileExists" xml:space="preserve">
    <value>Same file exists</value>
  </data>
  <data name="sWarning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="zReplaceIt" xml:space="preserve">
    <value>Do you want to replace it?</value>
  </data>
  <data name="zFailToLoad" xml:space="preserve">
    <value>Fail to load</value>
  </data>
  <data name="sRemove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="zAreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="sClear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="sSearch" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="sCommandFile" xml:space="preserve">
    <value>Command File</value>
  </data>
  <data name="sTypeDictionary" xml:space="preserve">
    <value>Type Dictionary</value>
  </data>
  <data name="sFunctions" xml:space="preserve">
    <value>Functions</value>
  </data>
  <data name="sCommandSet" xml:space="preserve">
    <value>Command Set</value>
  </data>
  <data name="sName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="sDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="sParameters" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="zParseError" xml:space="preserve">
    <value>Parse Error</value>
  </data>
  <data name="zStructEnumParseError" xml:space="preserve">
    <value>Struct Enum Parse Error</value>
  </data>
  <data name="zTypeNotFound" xml:space="preserve">
    <value>Type not found</value>
  </data>
  <data name="sError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="sFile" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="sSize" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="sType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="sShow" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="sHide" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="sCheckAll" xml:space="preserve">
    <value>Check All</value>
  </data>
  <data name="sUncheckAll" xml:space="preserve">
    <value>Uncheck All</value>
  </data>
  <data name="sAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="sClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="sExecute" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="sSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="sResults" xml:space="preserve">
    <value>Results</value>
  </data>
  <data name="sRun" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="sRunAll" xml:space="preserve">
    <value>Run All</value>
  </data>
  <data name="sEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="sRename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="zSameCommandExists" xml:space="preserve">
    <value>Same command exists</value>
  </data>
  <data name="sDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="sProperties" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="sExecuteAll" xml:space="preserve">
    <value>Execute All</value>
  </data>
  <data name="sExecuteOnce" xml:space="preserve">
    <value>Execute Once</value>
  </data>
  <data name="zCommandAlreadyExists" xml:space="preserve">
    <value>Command already exists in the list.</value>
  </data>
  <data name="sSelect" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="sDeselect" xml:space="preserve">
    <value>Deselect</value>
  </data>
  <data name="sGroup" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="sDeleteAll" xml:space="preserve">
    <value>Delete All</value>
  </data>
  <data name="zSerializeError" xml:space="preserve">
    <value>Serialize Error</value>
  </data>
  <data name="sInvalid" xml:space="preserve">
    <value>Invalid</value>
  </data>
  <data name="zParametersInvalid" xml:space="preserve">
    <value>Invalid parameter exists.</value>
  </data>
  <data name="zExecuteAnyway" xml:space="preserve">
    <value>Do you want to execute anyway?</value>
  </data>
  <data name="zInvalidSize" xml:space="preserve">
    <value>Invalid size.</value>
  </data>
  <data name="zSaveAnyway" xml:space="preserve">
    <value>Do you want to save anyway?</value>
  </data>
  <data name="sStart" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="sStop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="sRestart" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="zFailToExecute" xml:space="preserve">
    <value>Fail to execute.</value>
  </data>
  <data name="zExecutionTimeout" xml:space="preserve">
    <value>Execution timeout.</value>
  </data>
  <data name="sPreview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="sDisplay" xml:space="preserve">
    <value>Display</value>
  </data>
  <data name="sRadio" xml:space="preserve">
    <value>Radio</value>
  </data>
  <data name="sGeneral" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="sEncryption" xml:space="preserve">
    <value>Encryption</value>
  </data>
  <data name="sEnable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="sCommit" xml:space="preserve">
    <value>Commit</value>
  </data>
  <data name="sCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="sOk" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="sPush" xml:space="preserve">
    <value>Push</value>
  </data>
  <data name="sPull" xml:space="preserve">
    <value>Pull</value>
  </data>
  <data name="sRoSatProcessor" xml:space="preserve">
    <value>RoSatProcessor</value>
  </data>
  <data name="sAdvanced" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="sDebug" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="sFileShare" xml:space="preserve">
    <value>File Share</value>
  </data>
  <data name="sModuleMac" xml:space="preserve">
    <value>Module Mac</value>
  </data>
  <data name="sSatID" xml:space="preserve">
    <value>Satellite ID</value>
  </data>
  <data name="sConfiguration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="sBoardRevision" xml:space="preserve">
    <value>Board Revision</value>
  </data>
  <data name="sCPUType" xml:space="preserve">
    <value>CPU Type</value>
  </data>
  <data name="sFlags" xml:space="preserve">
    <value>Flags</value>
  </data>
  <data name="sFwType" xml:space="preserve">
    <value>FW Type</value>
  </data>
  <data name="sFwVersionMajor" xml:space="preserve">
    <value>FW Version Major</value>
  </data>
  <data name="sFwVersionMinor" xml:space="preserve">
    <value>FW Version Minor</value>
  </data>
  <data name="sGeneralConfig" xml:space="preserve">
    <value>General Configuration</value>
  </data>
  <data name="sFWConfig" xml:space="preserve">
    <value>Firmware Configuration</value>
  </data>
  <data name="sModuleType" xml:space="preserve">
    <value>ModuleType</value>
  </data>
  <data name="sModuleConfig" xml:space="preserve">
    <value>ModuleConfig</value>
  </data>
  <data name="sSubModule" xml:space="preserve">
    <value>Sub Module</value>
  </data>
  <data name="zNullArgument" xml:space="preserve">
    <value>Null Argument</value>
  </data>
  <data name="sOrbitalElements" xml:space="preserve">
    <value>Orbital Elements</value>
  </data>
  <data name="sSatelliteInfo" xml:space="preserve">
    <value>Satellite Information</value>
  </data>
  <data name="sUnsavedChanges" xml:space="preserve">
    <value>Unsaved Changes</value>
  </data>
  <data name="zCloseAnyway" xml:space="preserve">
    <value>Do you want to close anyway?</value>
  </data>
</root>